name: deploy

on:
  push:
    branches: [master, beta, live, workflow-test]
  pull_request:
    branches: [master]

  # Allows running this workflow manually from the Actions tab
  workflow_dispatch:

env:
  APP_PORT: 1337
  PAYLOAD_BYTE_LIMIT: 5000

  POSTGRES_HOST: localhost
  POSTGRES_PORT: 5435
  POSTGRES_USER: dev
  POSTGRES_PASSWORD: dev
  POSTGRES_DB: dev

jobs:
  build:
    runs-on: ubuntu-latest
    container: ubuntu
    services:
      postgres:
        image: postgres:13.4-alpine #database_image
        env:
          POSTGRES_PASSWORD: dev
          POSTGRES_USER: dev
          POSTGRES_DB: dev
        ports:
          - 5435:5432
        options: --health-cmd="pg_isready" --health-interval=5s --health-timeout=1s --health-retries=5
    steps:
      - uses: actions/checkout@v3

      # - name: Test postgres
      #   run: docker-compose exec postgres sh -c "postgres --version" 2> /dev/null

      - name: Which docker
        run: which docker

      - name: Which docker-compose
        run: which docker-compose

      - name: docker ps
        run: docker ps

      - name: Docker inspect
        run: docker inspect $(docker-inspect ps -q 2> /dev/null)

      # - name: Set up Go
      #   uses: actions/setup-go@v3
      #   with:
      #     go-version: 1.18

      # - name: Set up Go
      #   uses: actions/setup-go@v3
      #   with:
      #     go-version: 1.18

      # - name: Build
      #   run: go build -v ./...

      # - name: Run migrations
      #   run: go run ./cmd/migrate/main.go

      # - name: Run integration tests
      #   run: go test -tags=integration ./...
